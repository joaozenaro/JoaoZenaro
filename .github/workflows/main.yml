name: Bogosort Runner

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  run-bogosort:
    runs-on: ubuntu-latest
    container: node:20-alpine
    steps:
      - name: Install git and GitHub CLI
        run: |
          apk add --no-cache git
          # Install GitHub CLI
          wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | tee /etc/apk/keys/githubcli-archive-keyring.gpg > /dev/null
          echo "https://cli.github.com/packages/apk main" | tee /etc/apk/repositories/github-cli.list
          apk update
          apk add --no-cache gh

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Fix git ownership
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Run bogosort
        run: node bogosort.js

      - name: Generate SVG
        run: node generate-status-svg.js

      - name: Update README with status
        run: node update-readme.js

      - name: Commit changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add bogosort-status.svg README.md bogosort-status.json
          git commit -m "Bogosort update" || echo "No changes"
          git pull --rebase
          git push || echo "Push failed"

      - name: Delete old workflow runs
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          WORKFLOW_NAME="${{ github.workflow }}"
          
          # List runs for the current workflow, excluding the current run.
          # We sort by created, take the first 50, skip the current run (and perhaps a few others for safety),
          # extract their IDs, and then delete them.
          # Limiting to 50 runs to process helps prevent rate-limiting issues.
          gh run list --workflow="${WORKFLOW_NAME}" --json databaseId,status,conclusion,event,name,headBranch --jq '.[] | select(.status != "in_progress") | .databaseId' --limit 50 | tail -n +2 | xargs -r -n 1 gh run delete